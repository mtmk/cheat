@page "/"
@using System.Text
@using System.Text.RegularExpressions

<h1>Cheat!</h1>

Words with letters

<input @bind="_text" />

<button class="btn btn-primary" @onclick="Find">Find</button>

<pre>@_results</pre>

@code {
    string _results;
    string _text;

    private async Task Find()
    {
        var text = _text;
        await Task.Run(async delegate
        {
            var dictionary = new Dictionary<int, HashSet<string>>();
            
            _results = "thinking...";
            StateHasChanged();
            await Task.Delay(100);
     
            var count = 0;
            var tooMany = false;
            var re = new Regex($"^[{text}]+$", RegexOptions.Compiled);
            foreach (var word in Program.Words)
            {
                if (re.IsMatch(word))
                {
                    bool found = true;
                    var hashSet = new HashSet<char>(text);
                    foreach (var c in word)
                    {
                        if (hashSet.Contains(c))
                        {
                            hashSet.Remove(c);
                        }
                        else
                        {
                            found = false;
                            break;
                        }
                    }
                    if (found)
                    {
                        count++;
                        var len = word.Length;

                        if (!dictionary.TryGetValue(len, out var wordSet))
                        {
                            wordSet = dictionary[len] = new HashSet<string>();
                        }
                        wordSet.Add(word);
                    }

                    if (count > 5000)
                    {
                        tooMany = true;
                        break;
                    }
                }
            }

            var list =  new StringBuilder();
            foreach (var (len, words) in dictionary.OrderBy(kv => kv.Key))
            {
                list.AppendLine($"{len}-LETTER");
                foreach (var word in words.OrderBy(w => w))
                {
                    list.AppendLine($"  {word}");
                }
                list.AppendLine();
            }

            if (tooMany) list.AppendLine("--- Too many results ---");
            
            _results = list.ToString();
        });
    }
}
